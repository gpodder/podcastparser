---

name: test and publish

on: [push, pull_request]

jobs:

  test:
    name: run unit tests
    runs-on: ubuntu-latest
    if: >-
      github.event_name == 'push' ||
      github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install -r requirements-test.txt
      - name: Test
        run: make test

  distpublish:
    name: create sdist and wheel and publish
    runs-on: ubuntu-latest
    needs: test
    if: >-
      github.repository == 'gpodder/podcastparser' &&
      github.event_name == 'push' && (
        startsWith(github.ref, 'refs/tags') ||
        github.ref == 'refs/heads/master')

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      - name: patch unique version
        if: "!startsWith(github.ref, 'refs/tags')"
        run: |
          sed -i "s/\(__version__ = .*\)'/\1-dev${{ github.run_number }}'/" podcastparser.py
      - name: dist
        run: |
          python3 -m build --sdist --wheel
          twine check dist/*
      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
      - name: Publish package to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
